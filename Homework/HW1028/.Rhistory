knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
words[str_detect(words, "^x|x$")]
colors <- c("red", "orange", "yellow", "green", "blue", "purple")
color_match <- str_c(colors, collapse = "|")
color_match
has_color <- str_subset(sentences, color_match) matches <- str_extract(has_color, color_match) head(matches)
colors <- c("red", "orange", "yellow", "green", "blue", "purple")
color_match <- str_c(colors, collapse = "|")
color_match
has_color <- str_subset(sentences, color_match)
matches <- str_extract(has_color, color_match) head(matches)
colors <- c("red", "orange", "yellow", "green", "blue", "purple")
color_match <- str_c(colors, collapse = "|")
color_match
has_color <- str_subset(sentences, color_match)
matches <- str_extract(has_color, color_match)
head(matches)
more <- sentences[str_count(sentences, color_match) > 1]
str_view_all(more, color_match)
more <- sentences[str_count(sentences, color_match) > 1]
str_view_all(more, color_match)
str_extract(more, color_match)
str_extract_all(more, color_match, simplify = TRUE)
words[str_detect(words, "^x|x$")]
str_subset(words, "^[aeiou].*[^aeiou]$") %>% head()
words[str_detect(words, "a") &
str_detect(words, "e") &
str_detect(words, "i") &
str_detect(words, "o") &
str_detect(words, "u")]
words[str_detect(words, "a") &
str_detect(words, "e") &
str_detect(words, "i") &
str_detect(words, "o") &
str_detect(words, "u")]
pattern <- cross(rerun(5, c("a", "e", "i", "o", "u")),
.filter = function(...) {
x <- as.character(unlist(list(...)))
length(x) != length(unique(x))
}
) %>%
map_chr(~ str_c(unlist(.x), collapse = ".*")) %>%
str_c(collapse = "|")
str_subset(words, pattern)
colour_match2 <- str_c("\\b(", str_c(colours, collapse = "|"), ")\\b")
colours <- c("red", "orange", "yellow", "green", "blue", "purple")
colour_match2 <- str_c("\\b(", str_c(colours, collapse = "|"), ")\\b")
more2 <- sentences[str_count(sentences, colour_match) > 1]
colours <- c("red", "orange", "yellow", "green", "blue", "purple")
color_match <- str_c(colors, collapse = "|")
colour_match2 <- str_c("\\b(", str_c(colours, collapse = "|"), ")\\b")
more2 <- sentences[str_count(sentences, colour_match) > 1]
colours <- c("red", "orange", "yellow", "green", "blue", "purple")
color_match <- str_c(colours, collapse = "|")
color_match2 <- str_c("\\b(", str_c(colours, collapse = "|"), ")\\b")
more2 <- sentences[str_count(sentences, color_match) > 1]
str_view_all(more2, color_match2, match = TRUE)
pattern <- "\\b[A-Za-z]+ing\\b"
sentences_with_ing <- str_detect(sentences, pattern)
unique(unlist(str_extract_all(sentences[sentences_with_ing], pattern))) %>%
head()
unique(unlist(str_extract_all(sentences, "\\b[A-Za-z]{3,}s\\b"))) %>%
head()
numword <- "\\b(one|two|three|four|five|six|seven|eight|nine|ten) +(\\w+)"
sentences[str_detect(sentences, numword)] %>%
str_extract(numword)
sentences %>%
str_extract(numword)
numword <- "\\b(one|two|three|four|five|six|seven|eight|nine|ten) +(\\w+)"
sentences[str_detect(sentences, numword)] %>%
str_extract(numword)
contraction <- "([A-Za-z]+)'([A-Za-z]+)"
sentences[str_detect(sentences, contraction)] %>%
str_extract(contraction) %>%
str_split("'")
str_replace_all("past/present/future", "/", "\\\\")
replacements <- c(
"A" = "a", "B" = "b", "C" = "c", "D" = "d", "E" = "e",
"F" = "f", "G" = "g", "H" = "h", "I" = "i", "J" = "j",
"K" = "k", "L" = "l", "M" = "m", "N" = "n", "O" = "o",
"P" = "p", "Q" = "q", "R" = "r", "S" = "s", "T" = "t",
"U" = "u", "V" = "v", "W" = "w", "X" = "x", "Y" = "y",
"Z" = "z"
)
lower_words <- str_replace_all(words, pattern = replacements)
head(lower_words)
swapped <- str_replace_all(words, "^([A-Za-z])(.*)([a-z])$", "\\3\\2\\1")
intersect(swapped, words)
?intersect
x <- c("apples, pears, and bananas")
str_split(x, ", +(and +)?")[[1]]
sentence <- "The quick (“brown”) fox can’t jump 32.3 feet, right?"
str_split(sentence, boundary("word"))
sentence <- "The quick (“brown”) fox can’t jump 32.3 feet, right?"
str_split(sentence, boundary("word"))
str_split("ab. cd|agt", "")
sentence <- "The quick (“brown”) fox can’t jump 32.3 feet, right?"
str_split(sentence, boundary("word"))
str_locate("The quick (“brown”) fox can’t jump 32.3 feet, right?")
str_locate("The quick (“brown”) fox can’t jump 32.3 feet, right?", "ju")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
str_locate("The quick (“brown”) fox can’t jump 32.3 feet, right?", "ju")
bananas <- c("banana", "Banana", "BANANA")
str_view(bananas, "banana", ignore_case = F)
bananas <- c("banana", "Banana", "BANANA")
str_view(bananas, regex("banana", ignore_case = F))
bananas <- c("banana", "Banana", "BANANA")
str_view(bananas, regex("banana", ignore_case = T))
x <- "Line 1\nLine 2\nLine 3"
str_extract_all(x, "^Line")[[1]]
x <- "Line 1\nLine 2\nLine 3"
str_extract_all(x, "^Line")
x <- "This is a sentence.  This is another sentence."
str_view_all(x, boundary("word"))
str_extract_all(x, regex("^Line", multiline = TRUE))
x <- "Line 1\nLine 2\nLine 3"
str_extract_all(x, "^Line")
str_extract_all(x, regex("^Line", multiline = TRUE))
phone <- regex("
\\(? # optional opening parens
(\\d{3}) # area code
[)- ]? # optional closing parens, dash, or space (\\d{3}) # another three numbers
[ -]? # optional space or dash
(\\d{3}) # three more numbers
", comments = TRUE)
phone <- regex("
\\(? # optional opening parens
(\\d{3}) # area code
[)- ]? # optional closing parens, dash, or space (\\d{3}) # another three numbers
[ -]? # optional space or dash
(\\d{3}) # three more numbers
", comments = TRUE)
str_match("514-791-8141", phone)
microbenchmark::microbenchmark(
fixed = str_detect(sentences, fixed("the")),
regex = str_detect(sentences, "the"),
times = 20
)
microbenchmark::microbenchmark(
fixed = str_detect(sentences, fixed("the")),
regex = str_detect(sentences, "the"),
times = 20
)
install.packages("microbenchmark")
microbenchmark::microbenchmark(
fixed = str_detect(sentences, fixed("the")),
regex = str_detect(sentences, "the"),
times = 20
)
?coll
i <- c("I", "İ", "i", "ı")
str_subset(i, coll("i", ignore_case = TRUE))
a1 <- "\u00e1"
a2 <- "a\u0301"
c(a1, a2)
str_detect(a1, fixed(a2))
str_detect(a1, coll(a2))
str_subset(c("a\\b", "ab"), "\\\\")
str_subset(c("a\\b", "ab"), fixed("\\"))
tibble(word = unlist(str_extract_all(sentences, boundary("word")))) %>%
mutate(word = str_to_lower(word)) %>%
count(word, sort = TRUE) %>%
head(5)
apropos("replace")
head(dir(pattern = "\\.Rmd$"))
stri_count_words(head(sentences))
install.packages("stringi")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(stringi)
stri_count_words(head(sentences))
stri_duplicated(c(
"the", "brown", "cow", "jumped", "over",
"the", "lazy", "fox"
))
stri_rand_strings(4, 5)
x <- c("a", "a b", "a b c")
str_extract_all(x, "[a-z]", simplify = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(stringi)
str_view("\"'\\", "\"'\\\\", match = TRUE)
str_subset(stringr::words, "q[^u]")
str_view(words, "([aeiou][^aeiou]){2,}", match = TRUE)
str_subset(words, "^(.).*\\1$")
words[str_detect(words, "^x|x$")]
str_subset(words, "^[aeiou].*[^aeiou]$") %>% head()
words[str_detect(words, "^x|x$")]
str_subset(words, "^[aeiou].*[^aeiou]$") %>% head()
words[str_detect(words, "a") &
str_detect(words, "e") &
str_detect(words, "i") &
str_detect(words, "o") &
str_detect(words, "u")]
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(stringi)
?str_subset
str_subset(c("a\\b", "ab"), "\\\\")
stri_count_words(head(sentences))
stri_duplicated(c(
"the", "brown", "cow", "jumped", "over",
"the", "lazy", "fox"
))
stri_rand_strings(4, 5)
?str_match
strings <- c(" 219 733 8965", "329-293-8753 ", "banana", "595 794 7569",
"387 287 6718", "apple", "233.398.9187  ", "482 952 3315",
"239 923 8115 and 842 566 4692", "Work: 579-499-7527", "$1000",
"Home: 543.355.3679")
phone <- "([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})"
str_extract(strings, phone)
str_match(strings, phone)
strings <- c(" 119 733 8965", "329-293-8753 ", "banana", "595 794 7569",
"387 287 6718", "apple", "233.398.9187  ", "482 952 3315",
"239 923 8115 and 842 566 4692", "Work: 579-499-7527", "$1000",
"Home: 543.355.3679")
phone <- "([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})"
str_extract(strings, phone)
str_match(strings, phone)
strings <- c(" 219 733 8965", "329-293-8753 ", "banana", "595 794 7569",
"387 287 6718", "apple", "233.398.9187  ", "482 952 3315",
"239 923 8115 and 842 566 4692", "Work: 579-499-7527", "$1000",
"Home: 543.355.3679")
phone <- "([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})"
str_extract(strings, phone)
str_match(strings, phone)
install.packages("countrytimezones")
runExample("06_tabsets")
shiny::runApp('~/Documents/GitHub/DS_CLASS_2019-20_Helen/Classnote/tab_test')
runApp('~/Documents/GitHub/DS_CLASS_2019-20_Helen/Classnote/tab_test')
source('~/.active-rstudio-document', echo=TRUE)
runApp('~/Documents/GitHub/DS_CLASS_2019-20_Helen/Classnote/tab_test')
runApp('~/Documents/GitHub/DS_CLASS_2019-20_Helen/Classnote/tab_test')
